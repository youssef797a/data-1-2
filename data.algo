ALGORITHM distinct
VAR
    set1 : : ARRAY_OF INTEGER[] := {3, 1, 7,9} 
    set2 : : ARRAY_OF INTEGER[] := {3, 1, 7, 9, 3}
    i, j : INTEGER;
    sum : INTEGER := 0;
    found : BOOLEAN
BEGIN
    FOR i FROM 0 TO set1.length-1 STEP 1  DO
        FOR j FROM 0 TO set2.length-1 STEP 1 DO
            IF (set1[i] = set2[j]) THEN
            found := TRUE
            BREAK;        
            END_IF
        IF (found = FALSE) THEN
            sum := sum + set1[i]
        END_IF
    END_FOR
END
Function dot_product(v1, v2):
    ps = 0
    for i = 0 to length(v1) - 1 do:
        ps = ps + v1[i] * v2[i]
    return ps

Procedure check_orthogonal_vectors_using_function(n, vectors):
    for i = 0 to n - 1 do:
        v1 = vectors[i][0]
        v2 = vectors[i][1]
        ps = dot_product(v1, v2)
        if ps = 0 then
            output "Vectors ", v1, " and ", v2, " are orthogonal."
        else
            output "Vectors ", v1, " and ", v2, " are not orthogonal."
